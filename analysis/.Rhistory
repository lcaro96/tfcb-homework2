install.packages("tidyverse")
standard analysis and plotting functions, includes dplyr, ggplot2
library(tidyverse)
data <- mtcars
data <- read_csv("https://github.com/tidyverse/readr/raw/master/inst/extdata/mtcars.csv")
data <- mtcars
processed_data <- data %>%
filter(am == 1) %>%
select(mpg, qsec, carb)
processed_data
processed_data %>%
gather(statistic, value, -carb) %>%
ggplot(aes(x = carb, y = value, color = statistic)) +
facet_wrap(~ statistic, ncol = 2) +
geom_jitter(width = 0)
library(tidyverse)
data <- mtcars
processed_data <- data %>%
filter(am == 1) %>%
select(mpg, qsec, carb)
processed_data
processed_data %>%
gather(statistic, value, -carb) %>%
ggplot(aes(x = carb, y = value, color = statistic)) +
facet_wrap(~ statistic, ncol = 2) +
geom_jitter(width = 0)
install.packages("tidyverse")
library(tidyverse)
data <- mtcars
processed_data <- data %>%
filter(am == 1) %>%
select(mpg, qsec, carb)
processed_data
processed_data %>%
gather(statistic, value, -carb) %>%
ggplot(aes(x = carb, y = value, color = statistic)) +
facet_wrap(~ statistic, ncol = 2) +
geom_jitter(width = 0)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
print(data, n = 5)
knitr::opts_chunk$set(echo = TRUE)
flow_data <- read_tsv("tables/raw_flow_cytometry_data.tsv") %>%
print()
source("https://bioconductor.org/biocLite.R")
biocLite("GenomicRanges")
source("https://bioconductor.org/biocLite.R")
biocLite("GenomicRanges")
biocLite("plyranges")
biocLite("rtracklayer")
biocLite("GenomicAlignments")
bioLite("enomicFeatures")
biocLite("GenomicFeatures")
biocLite("BSgenome.Hsapiens.UCSC.hg19")
setwd("~/")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read_tsv("Backcross Data.tsv.txt")
data <- read_tsv("Backcross Data.tsv.txt")
data <- read_tsv("Backcross Data.tsv.txt")
data <- write.csv("Backcross Data.tsv.txt")
data <- write.tsv("Backcross Data.tsv.txt")
data <- write.csv("Backcross Data.tsv.txt")
data <- read_tsv("Backcross Data.tsv.txt")
data <- read_tsv("Backcross Data.tsv.txt")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read_tsv("Backcross Data.tsv.txt") %>%
print()
data %>%
select(Generation_of_mother, `#_embryo`) %>%
print()
data %>%
select(Generation_of_mother, #_embryo, #_dead_embryo, #_adults) %>%
print()
data %>%
select(Generation_of_mother, '#_embryo', '#_dead_embryo', '#_adults') %>%
print()
data %>%
select(Generation_of_mother, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
print()
data %>%
select(Generation_of_mother, '#_embryo', '#_dead_embyo', '#_adults') %>%
mutate (expected_adults = '#_embryo' - '#_dead_embyo')
data %>%
select(Generation_of_mother, '#_embryo', '#_dead_embyo', '#_adults') %>%
mutate (expected_adults = '#_embryo' / '#_dead_embyo')
data %>%
select(Generation_of_mother, '#_embryo', '#_dead_embyo', '#_adults') %>%
mutate (expected_adults = '#_embryo'-'#_dead_embyo')
data %>%
select(Generation_of_mother, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
print()
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
print()
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
mutate(embryo_lethality = '#_dead_embyo'/'#_embryo')
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
print()
data %>%
mutate(embryo_lethality = '#_dead embyo' / '#_embryo') %?%
print()
data %>%
mutate(embryo_lethality = '#_dead embyo' / '#_embryo') %>%
print()
data %>%
#mutate(embryo_lethality = '#_dead embyo' / '#_embryo') %>%
mutate(hi = Generation_of_mother / Line)
print()
data %>%
#mutate(embryo_lethality = '#_dead embyo' / '#_embryo') %>%
mutate(hi = Generation_of_mother / Line) %>%
print()
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
filter(is.na('#_embryo'))%>%
print()
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
filter(!is.na('#_embryo'))%>%
print()
data %>%
#mutate(embryo_lethality = '#_dead embyo' / '#_embryo') %>%
mutate(hi = Generation_of_mother / Line) %>%
print()
data %>%
mutate(embryo_lethality = '#_dead embyo' / '#_embryo') %>%
#mutate(hi = Generation_of_mother / Line) %>%
print()
data %>% data %>%
mutate(embryo_lethality = '#_dead_embyo' /'"#_embryo') %>%
#mutate(hi = Generation_of_mother / Line) %>%
print()
data <- data %>%
mutate(embryo_lethality = ('#_dead_embyo' /'#_embryo')) %>%
#mutate(hi = Generation_of_mother / Line) %>%
print()
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
mutate('#_embryo' = embryo)
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
mutate(embryo = '#_embryo')
print()
data %>%
select(Generation_of_mother, Line, '#_embryo', '#_dead_embyo', '#_adults', '#_expected_adults') %>%
mutate(embryo = '#_embryo') %>%
print()
data <- read_tsv("Backcross Data.tsv.txt") %>%
print()
data %>%
select(Mother_gen, Line, embryo, dead_embryo, adults, expected_adults) %>%
print()
data <- data %>%
mutate(embryo_lethality = (dead_embryo / embryo)) %>%
#mutate(hi = Generation_of_mother / Line) %>%
print()
data <- data %>%
select(Mother_gen, Line, embryo, dead_embryo, adults, expected_adults) %>%
print()
data <- data %>%
mutate(embryo_lethality = (dead_embryo / embryo)) %>%
#mutate(hi = Generation_of_mother / Line) %>%
print()
data <- data %>%
mutate(embryo_lethality = (dead_embryo / embryo) * 100) %>%
#mutate(hi = Generation_of_mother / Line) %>%
print()
data %>%
ggplot(aes (x = Mother_gen,
y = embryo_lethality,
color = Line,
group = Line))+
ggpoint()
data %>%
ggplot(aes (x = Mother_gen,
y = embryo_lethality,
color = Line,
group = Line))+
geom_line()+
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rtracklayer)
library(plyranges)
library(Biostrings)
data <- reat_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz)
data <- reat_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz")
data <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz")
data <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz") %>%
print()
data <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
print()
data <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "#") %>%
#filter()
print()
data <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
filter(short_description = str_detect("GATA1")) %>%
print()
data <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
filter(short_description == str_detect("GATA1")) %>%
print()
data <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
filter(short_description == str_detect(data, "GATA1")) %>%
print()
annotations <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
filter(short_description == str_detect(., "GATA1")) %>%
print()
annotations <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
print()
annotations %>%
filter(short_description == str_detect(data, "GATA1")) %>%
print()
annotations %>%
filter(short_description == str_detect(annotations, "GATA1")) %>%
print()
annotations <- annotations %>%
filter(short_description == str_detect(annotations, "GATA1")) %>%
print()
annotations <- annotations %>%
#filter(short_description == str_detect(annotations, "GATA1")) %>%
print()
annotations <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
print()
annotations %>%
#filter(short_description == str_detect (., "GATA1")) %>%
print()
annotations %>%
filter(short_description == str_detect (., "GATA1")) %>%
print()
annotations %>%
#filter(short_description == str_detect (., "GATA1")) %>%
print()
annotations %>%
filter(str_detect (., "GATA1")) %>%
print()
annotations %>%
filter(str_detect("GATA1")) %>%
print()
annotations %>%
filter(str_detect(short_description, "GATA1")) %>%
print()
annotations %>%
print()
annotations <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
filter(str_detect(short_description, "GATA1")) %>%
print()
annotations <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz", comment = "##") %>%
print()
gata1_annotations <- annotations %>%
filter(str_detect(short_description, "GATA1")) %>%
print()
coordinates <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz")
coordinates <- read_tsv("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
annotations_1 <- rtracklayer::import.gff1(http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz)
annotations_1 <- rtracklayer::import.gff1("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_ann.txt.gz")
coordinates_1 <- readGAlignments("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
library(GenomicAlignments)
coordinates_1 <- readGAlignments("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
library(GenomicAlignments)
coordinates_1 <- readGAlignments("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
library(GenomicAlignments)
coordinates_1 <- readGAlignments("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
library(GenomicAlignments)
coordinates_1 <- readGAlignments("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
coordinates %>%
qnarrow(start = 1, end = 1) %>%
print()
library(tidyverse)
library(rtracklayer)
library(plyranges)
library(Biostrings)
coordinates %>%
qnarrow(start = 1, end = 1) %>%
print()
coordinates <- tracklayer::import.bed("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
coordinates <- rtracklayer::import.bed("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
coordinates <- rtracklayer::import.bed("http://fantom.gsc.riken.jp/5/datafiles/latest/extra/CAGE_peaks/hg19.cage_peak_phase1and2combined_coord.bed.gz") %>%
print()
coordinates %>%
qnarrow(start = 1, end = 1) %>%
print()
coordinates %>%
filter(strand == +) %>%
coordinates %>%
filter(strand == "+") %>%
print()
coordinates %>%
filter(strand == "+") %>%
qnarrow(start = 1, width = 1) %>%
print()
coordinates %>%
filter(strand == "+" & width == 1) %>%
print()
filtered_coordinates <- coordinates %>%
filter(strand == "+" & width == 1) %>%
print()
stretched_coordinates <- filtered_coordinates %>%
stretch(10) %>%
print()
stretched_coordinates <- filtered_coordinates %>%
stretch(20) %>%
print()
coordinates %>%
filter(strand == "+" & width == 1) %>%
print()
coordinates %>%
stretch(20) %>%
print()
coordinates <- coordinates %>%
filter(strand == "+" & width == 1) %>%
print()
oordinates <- coordinates %>%
stretch(20) %>%
print()
tss_seq <- getSeq(x = coordinates)
tss_seq  <- getSeq(coordinates) %<%
print()
tss_seq  <- getSeq(coordinates) %>%
print()
getSeq(coordinates) %>%
print()
Biostrings.getSeq(coordinates) %>%
print()
Biostring::getSeq(coordinates) %>%
print()
Biostrings::getSeq(coordinates) %>%
print()
setwd("~/GitHub/tfcb-homework2/tfcb-homework2")
setwd("~/GitHub/tfcb-homework2/tfcb-homework2/analysis")
knitr::opts_chunk$set(echo = TRUE)
# Load data file into tibble
data <- read_tsv("../data/example_dataset_2.tsv") %>%
# Add a column that provides mean ratio
mutate(mean_ratio = mean_yfp / mean_rfp) %>%
# Round the new column's value to the hundredths-place
mutate(mean_ratio = round(mean_ratio, 2)) %>%
# Print modified table
print()
# Access tidyverse library
library(tidyverse)
# Load data file into tibble
data <- read_tsv("../data/example_dataset_2.tsv") %>%
# Add a column that provides mean ratio
mutate(mean_ratio = mean_yfp / mean_rfp) %>%
# Round the new column's value to the hundredths-place
mutate(mean_ratio = round(mean_ratio, 2)) %>%
# Print modified table
print()
# Load annotations file into a tibble, and print
annotations <- read_tsv("../data/example_dataset_3.tsv") %>%
print()
# Join 'data' and 'annotations' if they share the same 'strain' name
data %>%
innerjoin(annotation, by = "strain") %>%
print()
# Join 'data' and 'annotations' if they share the same 'strain' name
data %>%
inner_join(annotation, by = "strain") %>%
print()
# Join 'data' and 'annotations' tables by their in-common 'strain' name
data %>%
inner_join(annotations, by = "strain") %>%
print()
# Join 'data' and 'annotations' tables, keeping 'data' rows
data %>%
left_join(annotations, by = 'strain') %>%
print()
# Join 'data' and 'annotations' tables, keeping 'data' rows
data %>%
left_join(annotations, by = "strain"") %>%
print()
# Join 'data' and 'annotations' tables, keeping 'data' rows
data %>%
left_join(annotations, by = "strain") %>%
print()
# Join 'data' and 'annotations' tables, keeping 'annotations' rows
data %>%
right_join(annotations, by = "strain")
# Summarize yfp and rfp means across rows
data %>%
summarize(max_yfp = max(mean_yfp),
max_rfp = max(mean_rfp)) %>%
print()
# Load data file nito a tibble
data_2 <- read_tsv("../data/example_dataset_4.tsv") %>%
print()
# Group rows by common 'strain' names
data_2 %>%
group_by(strain) %>%
print()
# Group rows by common 'strain' names
data_2 %>%
group_by("strain") %>%
print()
# Group rows by common 'strain' names
data_2 %>%
group_by(strain) %>%
print()
# Group rows by common 'strain' names, and summarize group fluorescence data
data_2 %>%
group_by(strain) %>%
summarize(mean_yfp = mean(yfp),
mean_rfp = mean(rfp)) %>%
print()
# Group rows by common 'strain' names
data_2 %>%
group_by(strain) %>%
# Summarize each group's mean fluorescence
summarize(mean_yfp = mean(yfp),
mean_rfp = mean(rfp),
# Calculate esach group's standard error
se_yfp = sd(yfp) / sqrt(n()),
se_rfp = sd(rfp) / sqrt(n())) %>%
print()
# Group rows by common 'strain' names
data_2 %>%
group_by(strain) %>%
# Summarize each group's mean fluorescence
summarize(mean_yfp = mean(yfp),
mean_rfp = mean(rfp),
# Calculate esach group's standard error
se_yfp = sd(yfp) / sqrt(n()),
se_rfp = sd(rfp) / sqrt(n())) %>%
# Add column for mean ratio of yfp to rfp
mutate(mean_ratio = mean_yfp / mean_rfp_) %>%
# Join annotations with modified dataset by common strain names
left_join(annotations, by = "strain") %>%
# Make line/point plot of mean fluorescence ration vs kozak region
ggplot(ae(x = kozak_region,
y = mean_ratio,
# Rows with different insert sequences get different colors
color = insert_sequence,
group = insert_sequence)) +
geom_line() +
geom_plot()
# Group rows by common 'strain' names
data_2 %>%
group_by(strain) %>%
# Summarize each group's mean fluorescence
summarize(mean_yfp = mean(yfp),
mean_rfp = mean(rfp),
# Calculate esach group's standard error
se_yfp = sd(yfp) / sqrt(n()),
se_rfp = sd(rfp) / sqrt(n())) %>%
# Add column for mean ratio of yfp to rfp
mutate(mean_ratio = mean_yfp / mean_rfp) %>%
# Join annotations with modified dataset by common strain names
left_join(annotations, by = "strain") %>%
# Make line/point plot of mean fluorescence ration vs kozak region
ggplot(ae(x = kozak_region,
y = mean_ratio,
# Rows with different insert sequences get different colors
color = insert_sequence,
group = insert_sequence)) +
geom_line() +
geom_plot()
# Group rows by common 'strain' names
data_2 %>%
group_by(strain) %>%
# Summarize each group's mean fluorescence
summarize(mean_yfp = mean(yfp),
mean_rfp = mean(rfp),
# Calculate esach group's standard error
se_yfp = sd(yfp) / sqrt(n()),
se_rfp = sd(rfp) / sqrt(n())) %>%
# Add column for mean ratio of yfp to rfp
mutate(mean_ratio = mean_yfp / mean_rfp) %>%
# Join annotations with modified dataset by common strain names
left_join(annotations, by = "strain") %>%
# Make line/point plot of mean fluorescence ration vs kozak region
ggplot(aes(x = kozak_region,
y = mean_ratio,
# Rows with different insert sequences get different colors
color = insert_sequence,
group = insert_sequence)) +
geom_line() +
geom_plot()
# Group rows by common 'strain' names
data_2 %>%
group_by(strain) %>%
# Summarize each group's mean fluorescence
summarize(mean_yfp = mean(yfp),
mean_rfp = mean(rfp),
# Calculate esach group's standard error
se_yfp = sd(yfp) / sqrt(n()),
se_rfp = sd(rfp) / sqrt(n())) %>%
# Add column for mean ratio of yfp to rfp
mutate(mean_ratio = mean_yfp / mean_rfp) %>%
# Join annotations with modified dataset by common strain names
left_join(annotations, by = "strain") %>%
# Make line/point plot of mean fluorescence ration vs kozak region
ggplot(aes(x = kozak_region,
y = mean_ratio,
# Rows with different insert sequences get different colors
color = insert_sequence,
group = insert_sequence)) +
geom_line() +
geom_point()
